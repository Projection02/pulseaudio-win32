From 78e1b4dac93e532f6e2f21ed63df8e772a7788c7 Mon Sep 17 00:00:00 2001
From: projection02 <projection02@outlook.com>
Date: Mon, 9 Jun 2025 22:12:10 +0800
Subject: [PATCH] pulseaudio win32 patch

---
 man/pulse-client.conf.5.xml.in |  2 +-
 meson.build                    |  2 +-
 src/daemon/default.pa.in       |  2 +-
 src/daemon/system.pa.in        | 10 +++++++++-
 src/pulse/client-conf.c        |  2 +-
 src/pulse/client.conf.in       |  2 +-
 6 files changed, 14 insertions(+), 6 deletions(-)

diff --git a/man/pulse-client.conf.5.xml.in b/man/pulse-client.conf.5.xml.in
index 15f8776b0..0129e8aa9 100644
--- a/man/pulse-client.conf.5.xml.in
+++ b/man/pulse-client.conf.5.xml.in
@@ -139,7 +139,7 @@ License along with PulseAudio; if not, see <http://www.gnu.org/licenses/>.
       and a rogue server might hence fool a client into sending it its
       private (e.g. VoIP call) data. This was enabled by default on
       PulseAudio version 0.9.21 and older. Defaults to
-      <opt>no</opt>.</p>
+      <opt>yes</opt>.</p>
     </option>
 
     <option>
diff --git a/meson.build b/meson.build
index d4cdbd6a5..40cdf5378 100644
--- a/meson.build
+++ b/meson.build
@@ -681,7 +681,7 @@ if get_option('daemon')
     cdata.set('HAVE_ALSA_UCM', 1)
   endif
 
-  gio_dep = dependency('gio-2.0', version : '>= 2.26.0')
+  gio_dep = dependency('gio-2.0', version : '>= 2.26.0', required: false) # checked later on where needed by gsettings and gstreamer
   if get_option('gsettings').enabled()
     assert(gio_dep.found(), 'GSettings support needs glib I/O library (GIO)')
     cdata.set('HAVE_GSETTINGS', 1)
diff --git a/src/daemon/default.pa.in b/src/daemon/default.pa.in
index 81dfe7103..e7cc8bcd2 100755
--- a/src/daemon/default.pa.in
+++ b/src/daemon/default.pa.in
@@ -45,7 +45,7 @@ ifelse(@HAVE_OSS_OUTPUT@, 1, [dnl
 #load-module module-oss-mmap device="/dev/dsp" sink_name=output source_name=input
 ])dnl
 ifelse(@HAVE_WAVEOUT@, 1, [dnl
-load-module module-waveout sink_name=output source_name=input
+load-module module-waveout sink_name=waveout source_name=wavein
 ])dnl
 #load-module module-null-sink
 ifelse(@HAVE_MKFIFO@, 1, [dnl
diff --git a/src/daemon/system.pa.in b/src/daemon/system.pa.in
index 795045bd4..6ee7efaf0 100755
--- a/src/daemon/system.pa.in
+++ b/src/daemon/system.pa.in
@@ -24,6 +24,11 @@ load-module module-device-restore
 load-module module-stream-restore
 load-module module-card-restore
 
+### Load audio drivers statically
+ifelse(@HAVE_WAVEOUT@, 1, [dnl
+load-module module-waveout sink_name=waveout source_name=wavein
+])dnl
+
 ### Automatically load driver modules depending on the hardware available
 ifelse(@HAVE_UDEV@, 1, [dnl
 .ifexists module-udev-detect@PA_SOEXT@
@@ -47,10 +52,13 @@ load-module module-devd-detect
 ])dnl
 
 ### Load several protocols
+ifelse(@HAVE_AF_UNIX@, 1, [dnl
 .ifexists module-esound-protocol-unix@PA_SOEXT@
 load-module module-esound-protocol-unix
 .endif
-load-module module-native-protocol-unix
+load-module module-native-protocol-unix auth-anonymous=1
+])dnl
+load-module module-native-protocol-tcp auth-anonymous=1
 
 ### Automatically restore the default sink/source when changed by the user
 ### during runtime
diff --git a/src/pulse/client-conf.c b/src/pulse/client-conf.c
index 1daaf9111..1fb008eec 100644
--- a/src/pulse/client-conf.c
+++ b/src/pulse/client-conf.c
@@ -67,7 +67,7 @@ static const pa_client_conf default_conf = {
     .disable_shm = false,
     .disable_memfd = false,
     .shm_size = 0,
-    .auto_connect_localhost = false,
+    .auto_connect_localhost = true,
     .auto_connect_display = false
 };
 
diff --git a/src/pulse/client.conf.in b/src/pulse/client.conf.in
index 26b7790aa..ee85808d1 100644
--- a/src/pulse/client.conf.in
+++ b/src/pulse/client.conf.in
@@ -31,5 +31,5 @@
 ; enable-shm = yes
 ; shm-size-bytes = 0 # setting this 0 will use the system-default, usually 64 MiB
 
-; auto-connect-localhost = no
+; auto-connect-localhost = yes
 ; auto-connect-display = no
-- 
2.43.0

